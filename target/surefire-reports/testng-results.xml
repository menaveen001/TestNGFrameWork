<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="19" passed="19" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-05-27T12:37:52 IST" name="Suite" finished-at="2023-05-27T12:39:04 IST" duration-ms="72761">
    <groups>
    </groups>
    <test started-at="2023-05-27T12:37:52 IST" name="Test" finished-at="2023-05-27T12:39:04 IST" duration-ms="72761">
      <class name="com.tutorialsninja.qa.testcases.RegisterTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.RegisterTest@7cc0cdad]" started-at="2023-05-27T12:37:53 IST" name="setup" finished-at="2023-05-27T12:37:57 IST" duration-ms="3840" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyRegisteringAnAccountWithMandatoryFields(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:com.tutorialsninja.qa.testcases.RegisterTest@7cc0cdad]" started-at="2023-05-27T12:37:57 IST" name="verifyRegisteringAnAccountWithMandatoryFields" data-provider="registerAccountData" finished-at="2023-05-27T12:37:58 IST" duration-ms="1169" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Navi]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pal]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[navipal@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[999111]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisteringAnAccountWithMandatoryFields -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tutorialsninja.qa.testcases.RegisterTest@7cc0cdad]" started-at="2023-05-27T12:37:58 IST" name="tearDown" finished-at="2023-05-27T12:37:59 IST" duration-ms="281" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.RegisterTest@7cc0cdad]" started-at="2023-05-27T12:37:59 IST" name="setup" finished-at="2023-05-27T12:38:01 IST" duration-ms="2527" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyRegisteringAnAccountWithMandatoryFields(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:com.tutorialsninja.qa.testcases.RegisterTest@7cc0cdad]" started-at="2023-05-27T12:38:01 IST" name="verifyRegisteringAnAccountWithMandatoryFields" data-provider="registerAccountData" finished-at="2023-05-27T12:38:02 IST" duration-ms="1060" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Aru]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pal]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[arupal@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[999222]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisteringAnAccountWithMandatoryFields -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tutorialsninja.qa.testcases.RegisterTest@7cc0cdad]" started-at="2023-05-27T12:38:02 IST" name="tearDown" finished-at="2023-05-27T12:38:02 IST" duration-ms="231" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.RegisterTest@7cc0cdad]" started-at="2023-05-27T12:38:02 IST" name="setup" finished-at="2023-05-27T12:38:05 IST" duration-ms="2467" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyRegisteringAccountByProvidingAllFields(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:com.tutorialsninja.qa.testcases.RegisterTest@7cc0cdad]" started-at="2023-05-27T12:38:05 IST" name="verifyRegisteringAccountByProvidingAllFields" data-provider="registerAccountData" finished-at="2023-05-27T12:38:06 IST" duration-ms="1296" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Navi]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pal]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[navipal@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[999111]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisteringAccountByProvidingAllFields -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tutorialsninja.qa.testcases.RegisterTest@7cc0cdad]" started-at="2023-05-27T12:38:06 IST" name="tearDown" finished-at="2023-05-27T12:38:06 IST" duration-ms="239" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.RegisterTest@7cc0cdad]" started-at="2023-05-27T12:38:06 IST" name="setup" finished-at="2023-05-27T12:38:09 IST" duration-ms="2553" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyRegisteringAccountByProvidingAllFields(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:com.tutorialsninja.qa.testcases.RegisterTest@7cc0cdad]" started-at="2023-05-27T12:38:09 IST" name="verifyRegisteringAccountByProvidingAllFields" data-provider="registerAccountData" finished-at="2023-05-27T12:38:10 IST" duration-ms="1161" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Aru]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pal]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[arupal@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[999222]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisteringAccountByProvidingAllFields -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tutorialsninja.qa.testcases.RegisterTest@7cc0cdad]" started-at="2023-05-27T12:38:10 IST" name="tearDown" finished-at="2023-05-27T12:38:11 IST" duration-ms="451" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.RegisterTest@7cc0cdad]" started-at="2023-05-27T12:38:11 IST" name="setup" finished-at="2023-05-27T12:38:13 IST" duration-ms="2421" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="VerifyRegisteringAccountWithExistingEmailAddress(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:3, instance:com.tutorialsninja.qa.testcases.RegisterTest@7cc0cdad]" started-at="2023-05-27T12:38:13 IST" name="VerifyRegisteringAccountWithExistingEmailAddress" data-provider="registerAccountData" finished-at="2023-05-27T12:38:14 IST" duration-ms="1077" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Navi]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pal]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[navipal@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[999111]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyRegisteringAccountWithExistingEmailAddress -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tutorialsninja.qa.testcases.RegisterTest@7cc0cdad]" started-at="2023-05-27T12:38:14 IST" name="tearDown" finished-at="2023-05-27T12:38:14 IST" duration-ms="226" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.RegisterTest@7cc0cdad]" started-at="2023-05-27T12:38:14 IST" name="setup" finished-at="2023-05-27T12:38:17 IST" duration-ms="2483" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="VerifyRegisteringAccountWithExistingEmailAddress(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:3, instance:com.tutorialsninja.qa.testcases.RegisterTest@7cc0cdad]" started-at="2023-05-27T12:38:17 IST" name="VerifyRegisteringAccountWithExistingEmailAddress" data-provider="registerAccountData" finished-at="2023-05-27T12:38:18 IST" duration-ms="1058" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Aru]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pal]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[arupal@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[999222]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyRegisteringAccountWithExistingEmailAddress -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tutorialsninja.qa.testcases.RegisterTest@7cc0cdad]" started-at="2023-05-27T12:38:18 IST" name="tearDown" finished-at="2023-05-27T12:38:18 IST" duration-ms="242" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.tutorialsninja.qa.testcases.RegisterTest -->
      <class name="com.tutorialsninja.qa.testcases.LoginTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@62379589]" started-at="2023-05-27T12:38:18 IST" name="setup" finished-at="2023-05-27T12:38:20 IST" duration-ms="2201" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyLoginWithValidCredentials(java.lang.String,java.lang.String)[pri:1, instance:com.tutorialsninja.qa.testcases.LoginTest@62379589]" started-at="2023-05-27T12:38:20 IST" name="verifyLoginWithValidCredentials" data-provider="vailidTestData" finished-at="2023-05-27T12:38:21 IST" duration-ms="613" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[navi3@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithValidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@62379589]" started-at="2023-05-27T12:38:21 IST" name="tearDown" finished-at="2023-05-27T12:38:21 IST" duration-ms="221" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@62379589]" started-at="2023-05-27T12:38:21 IST" name="setup" finished-at="2023-05-27T12:38:24 IST" duration-ms="2273" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyLoginWithValidCredentials(java.lang.String,java.lang.String)[pri:1, instance:com.tutorialsninja.qa.testcases.LoginTest@62379589]" started-at="2023-05-27T12:38:24 IST" name="verifyLoginWithValidCredentials" data-provider="vailidTestData" finished-at="2023-05-27T12:38:24 IST" duration-ms="668" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[navi1@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithValidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@62379589]" started-at="2023-05-27T12:38:24 IST" name="tearDown" finished-at="2023-05-27T12:38:24 IST" duration-ms="195" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@62379589]" started-at="2023-05-27T12:38:24 IST" name="setup" finished-at="2023-05-27T12:38:27 IST" duration-ms="2389" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyLoginWithValidCredentials(java.lang.String,java.lang.String)[pri:1, instance:com.tutorialsninja.qa.testcases.LoginTest@62379589]" started-at="2023-05-27T12:38:27 IST" name="verifyLoginWithValidCredentials" data-provider="vailidTestData" finished-at="2023-05-27T12:38:27 IST" duration-ms="608" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[navi2@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithValidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@62379589]" started-at="2023-05-27T12:38:27 IST" name="tearDown" finished-at="2023-05-27T12:38:28 IST" duration-ms="128" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@62379589]" started-at="2023-05-27T12:38:28 IST" name="setup" finished-at="2023-05-27T12:38:30 IST" duration-ms="2316" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyLoginWithInvalidCredentials()[pri:2, instance:com.tutorialsninja.qa.testcases.LoginTest@62379589]" started-at="2023-05-27T12:38:30 IST" name="verifyLoginWithInvalidCredentials" finished-at="2023-05-27T12:38:30 IST" duration-ms="505" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithInvalidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@62379589]" started-at="2023-05-27T12:38:30 IST" name="tearDown" finished-at="2023-05-27T12:38:31 IST" duration-ms="301" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@62379589]" started-at="2023-05-27T12:38:31 IST" name="setup" finished-at="2023-05-27T12:38:33 IST" duration-ms="2351" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyLoginWithValidEmailAndInvalidPassword(java.lang.String,java.lang.String)[pri:3, instance:com.tutorialsninja.qa.testcases.LoginTest@62379589]" started-at="2023-05-27T12:38:33 IST" name="verifyLoginWithValidEmailAndInvalidPassword" data-provider="vailidTestData" finished-at="2023-05-27T12:38:34 IST" duration-ms="471" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[navi3@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithValidEmailAndInvalidPassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@62379589]" started-at="2023-05-27T12:38:34 IST" name="tearDown" finished-at="2023-05-27T12:38:34 IST" duration-ms="179" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@62379589]" started-at="2023-05-27T12:38:34 IST" name="setup" finished-at="2023-05-27T12:38:36 IST" duration-ms="2349" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyLoginWithValidEmailAndInvalidPassword(java.lang.String,java.lang.String)[pri:3, instance:com.tutorialsninja.qa.testcases.LoginTest@62379589]" started-at="2023-05-27T12:38:36 IST" name="verifyLoginWithValidEmailAndInvalidPassword" data-provider="vailidTestData" finished-at="2023-05-27T12:38:37 IST" duration-ms="507" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[navi1@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithValidEmailAndInvalidPassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@62379589]" started-at="2023-05-27T12:38:37 IST" name="tearDown" finished-at="2023-05-27T12:38:37 IST" duration-ms="185" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@62379589]" started-at="2023-05-27T12:38:37 IST" name="setup" finished-at="2023-05-27T12:38:39 IST" duration-ms="2573" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyLoginWithValidEmailAndInvalidPassword(java.lang.String,java.lang.String)[pri:3, instance:com.tutorialsninja.qa.testcases.LoginTest@62379589]" started-at="2023-05-27T12:38:39 IST" name="verifyLoginWithValidEmailAndInvalidPassword" data-provider="vailidTestData" finished-at="2023-05-27T12:38:40 IST" duration-ms="497" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[navi2@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithValidEmailAndInvalidPassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@62379589]" started-at="2023-05-27T12:38:40 IST" name="tearDown" finished-at="2023-05-27T12:38:40 IST" duration-ms="210" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@62379589]" started-at="2023-05-27T12:38:40 IST" name="setup" finished-at="2023-05-27T12:38:42 IST" duration-ms="2288" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyLoginWithInvalidEmailAndValidPassword(java.lang.String,java.lang.String)[pri:4, instance:com.tutorialsninja.qa.testcases.LoginTest@62379589]" started-at="2023-05-27T12:38:42 IST" name="verifyLoginWithInvalidEmailAndValidPassword" data-provider="vailidTestData" finished-at="2023-05-27T12:38:43 IST" duration-ms="488" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[navi3@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithInvalidEmailAndValidPassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@62379589]" started-at="2023-05-27T12:38:43 IST" name="tearDown" finished-at="2023-05-27T12:38:43 IST" duration-ms="237" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@62379589]" started-at="2023-05-27T12:38:43 IST" name="setup" finished-at="2023-05-27T12:38:45 IST" duration-ms="2285" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyLoginWithInvalidEmailAndValidPassword(java.lang.String,java.lang.String)[pri:4, instance:com.tutorialsninja.qa.testcases.LoginTest@62379589]" started-at="2023-05-27T12:38:45 IST" name="verifyLoginWithInvalidEmailAndValidPassword" data-provider="vailidTestData" finished-at="2023-05-27T12:38:46 IST" duration-ms="477" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[navi1@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithInvalidEmailAndValidPassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@62379589]" started-at="2023-05-27T12:38:46 IST" name="tearDown" finished-at="2023-05-27T12:38:46 IST" duration-ms="223" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@62379589]" started-at="2023-05-27T12:38:46 IST" name="setup" finished-at="2023-05-27T12:38:49 IST" duration-ms="2378" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyLoginWithInvalidEmailAndValidPassword(java.lang.String,java.lang.String)[pri:4, instance:com.tutorialsninja.qa.testcases.LoginTest@62379589]" started-at="2023-05-27T12:38:49 IST" name="verifyLoginWithInvalidEmailAndValidPassword" data-provider="vailidTestData" finished-at="2023-05-27T12:38:49 IST" duration-ms="527" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[navi2@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithInvalidEmailAndValidPassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@62379589]" started-at="2023-05-27T12:38:49 IST" name="tearDown" finished-at="2023-05-27T12:38:49 IST" duration-ms="268" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@62379589]" started-at="2023-05-27T12:38:49 IST" name="setup" finished-at="2023-05-27T12:38:52 IST" duration-ms="2369" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyLoginWithOnlyValidEmailSkippingPassword(java.lang.String,java.lang.String)[pri:5, instance:com.tutorialsninja.qa.testcases.LoginTest@62379589]" started-at="2023-05-27T12:38:52 IST" name="verifyLoginWithOnlyValidEmailSkippingPassword" data-provider="vailidTestData" finished-at="2023-05-27T12:38:54 IST" duration-ms="2476" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[navi3@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithOnlyValidEmailSkippingPassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@62379589]" started-at="2023-05-27T12:38:54 IST" name="tearDown" finished-at="2023-05-27T12:38:54 IST" duration-ms="225" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@62379589]" started-at="2023-05-27T12:38:54 IST" name="setup" finished-at="2023-05-27T12:38:57 IST" duration-ms="2315" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyLoginWithOnlyValidEmailSkippingPassword(java.lang.String,java.lang.String)[pri:5, instance:com.tutorialsninja.qa.testcases.LoginTest@62379589]" started-at="2023-05-27T12:38:57 IST" name="verifyLoginWithOnlyValidEmailSkippingPassword" data-provider="vailidTestData" finished-at="2023-05-27T12:38:59 IST" duration-ms="2488" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[navi1@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithOnlyValidEmailSkippingPassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@62379589]" started-at="2023-05-27T12:38:59 IST" name="tearDown" finished-at="2023-05-27T12:38:59 IST" duration-ms="193" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@62379589]" started-at="2023-05-27T12:38:59 IST" name="setup" finished-at="2023-05-27T12:39:02 IST" duration-ms="2361" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyLoginWithOnlyValidEmailSkippingPassword(java.lang.String,java.lang.String)[pri:5, instance:com.tutorialsninja.qa.testcases.LoginTest@62379589]" started-at="2023-05-27T12:39:02 IST" name="verifyLoginWithOnlyValidEmailSkippingPassword" data-provider="vailidTestData" finished-at="2023-05-27T12:39:04 IST" duration-ms="2476" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[navi2@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithOnlyValidEmailSkippingPassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@62379589]" started-at="2023-05-27T12:39:04 IST" name="tearDown" finished-at="2023-05-27T12:39:04 IST" duration-ms="221" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.tutorialsninja.qa.testcases.LoginTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
